//
//  {{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit
import Bond
import Amber
//import Animatics
//import AnimaticsBond

let {{ module_info.name }}Module = {{ module_info.name }}Controller.self

final class {{ module_info.name }}Controller: UIViewController, AmberController {

    let store = AmberStore(reducer: {{ module_info.name }}Reducer(), router: {{ module_info.name }}Router())

    static let storyboardFile = "Main"
    static let storyboardID = "{{ module_info.name }}Controller"

    //MARK: - IBOutlets
    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var noItemsLabel: UILabel!
    @IBOutlet weak var loadingView: UIView!
    
    //MARK: - Life cycle
    override func viewDidLoad() {
        super.viewDidLoad()
        
        bind()
        bindTableView()
    }

    //MARK: - IBActions

}

//MARK: - Bindings
extension {{ module_info.name }}Controller{
    func bind(){
        
    }
    
    func bindTableView(){
        state.map { $0.itemsToDisplay }
            .distinct { $0 != $1 }
            .bind(to: tableView) { [unowned self] items, indexPath, tableView in
                let cell = tableView.dequeueReusableCell(withIdentifier: "{{ module_info.name }}Cell") as! {{ module_info.name }}TableViewCell
                let item = items[indexPath.row]
                
//                cell.reactive.bag.dispose()
//                cell.button.reactive.tap.replace(with: .itemPressed(indexPath.row)).bind(to: self.action).dispose(in: cell.reactive.bag)
                
                return cell
        }
        
        state.map { $0.itemsToDisplay.count == 0 }.bind(to: tableView.reactive.isHidden)
        state.map { $0.isLoading || $0.itemsToDisplay.count != 0 }.bind(to: noItemsLabel.reactive.isHidden)
        state.map { !$0.isLoading || $0.itemsToDisplay.count != 0 }.bind(to: loadingView.reactive.isHidden)
    }
}

extension {{ module_info.name }}Controller: UITableViewDelegate{
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath){
        store.performOutput(action: .itemPicked(store.currentState().itemsToDisplay[indexPath.row]))
    }
}

//MARK: - Helpers
extension {{ module_info.name }}Controller{

}

